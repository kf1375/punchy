server {
    listen 80 default_server;

    server_name _;

    location ^~ /api/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://backend:8000/;
    }
    # return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    http2 on;

    # use the certificates
    ssl_certificate     /etc/letsencrypt/live/myremotedevice.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/myremotedevice.com/privkey.pem;

    server_name myremotedevice.com;

    location / {
        root /var/www/public;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location ^~ /api/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://backend:8000/;
    }

    # Forward MQTT WebSocket traffic to the Mosquitto broker
    location ^~ /mqtt/ {
        proxy_pass http://mosquitto:1883;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }
}
