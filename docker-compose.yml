services:
  mosquitto:
    container_name: mosquitto
    build: 
      context: ./mosquitto
    ports:
      - "1883:1883"
    networks:
      - app_network

  postgres:
    container_name: postgres
    build: 
      context: ./postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  # telegram_bot:
  #   container_name: telegram_bot
  #   build:
  #     context: ./telegram_bot
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     - postgres
  #   environment:
  #     MQTT_BROKER: "mosquitto"
  #     MQTT_PORT: "1883"
  #     DATABASE_URL: "postgresql://testiwhisk:eT1wDCKu@postgres:5432/database"
  #     BOT_TOKEN: "6599928755:AAEVXPIrKmp3qOvmoT5x5eKXeifYZN01Ce4"
  #   networks:
  #     - app_network

  # frontend:
  #   container_name: frontend
  #   build:
  #     context: ./frontend
  #   volumes:
  #     - /etc/letsencrypt/live/myremotedevice.com/fullchain.pem:/etc/letsencrypt/live/myremotedevice.com/fullchain.pem
  #     - /etc/letsencrypt/live/myremotedevice.com/privkey.pem:/etc/letsencrypt/live/myremotedevice.com/privkey.pem
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   networks:
  #     - app_network
  # nginx:
  #     container_name: nginx
  #     restart: unless-stopped
  #     image: nginx
  #     networks:
  #         - app_network
  #     ports:
  #         - 80:80
  #         - 443:443
  #     volumes:
  #         - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
  #         - ./certbot/conf:/etc/letsencrypt
  #         - ./certbot/www:/var/www/certbot
  #         - ./frontend:/var/www/html

  frontend:
    container_name: frontend
    restart: unless-stopped
    build:
      context: ./frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - app_network
    depends_on:
      - certbot

  certbot:
    image: certbot/certbot
    container_name: certbot
    networks:
      - app_network
    volumes: 
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email myowniotproject2024@gmail.com -d myremotedevice.com --agree-tos

volumes:
  postgres_data:
    driver: local

networks:
  app_network:
    driver: bridge