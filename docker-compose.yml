services:
  mosquitto:
    container_name: mosquitto
    build: 
      context: ./mosquitto
    ports:
      - "1883:1883"
    networks:
      - app_network

  postgres:
    container_name: postgres
    build: 
      context: ./postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  backend:
    container_name: backend
    build:
      context: ./backend
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - mosquitto
    environment:
      MQTT_URL: "mqtt://mosquitto:1883"
      MQTT_BROKER: "mosquitto"
      MQTT_PORT: "1883"
      DATABASE_URL: "postgresql://testiwhisk:eT1wDCKu@postgres:5432/database"
      DATABASE_HOST: "postgres"
      DATABASE_PORT: 5432
      DATABASE_NAME: "database"
      DATABASE_USER: "testiwhisk"
      DATABASE_PASSWORD: "eT1wDCKu"
      BOT_TOKEN: "6599928755:AAEVXPIrKmp3qOvmoT5x5eKXeifYZN01Ce4"
      BITBUCKET_USERNAME: "kf1375"
      BITBUCKET_APP_PASSWORD: "ATBBPcge6ZWG2gYYuvSaQguVm9qv720FC492"
      BITBUCKET_WEBHOOK_SECRET: "5t##aUK63oO6uR#i"
    networks:
      - app_network
    volumes:
      - firmware_data:/app/services/firmware

  frontend:
    container_name: frontend
    restart: unless-stopped
    build:
      context: ./frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - app_network
    depends_on:
      - certbot
      - backend

  certbot:
    image: certbot/certbot
    container_name: certbot
    networks:
      - app_network
    volumes: 
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email myowniotproject2024@gmail.com -d myremotedevice.com --agree-tos

volumes:
  postgres_data:
    driver: local
  firmware_data:
    driver: local

networks:
  app_network:
    driver: bridge